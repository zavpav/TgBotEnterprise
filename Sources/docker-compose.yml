version: '3.4'

services:
  rabbit:
    image: rabbitmq:3-management
    container_name: tg-rabbit
    ports:
    - 5672:5672 
    - 15672:15672
    hostname: tg-rabbit-mq
  redmineservice:
    image: ${DOCKER_REGISTRY-}redmineservice
    container_name: tg-redmine-service
    build:
      context: .
      dockerfile: RedmineService\Dockerfile
    environment:
    - RABBIT_MQ=tg-rabbit-mq
    volumes:
    - ../DockerVolumes/RedmineConfig/Secretic:/app/Secretic
  jenkinsservice:
    image: ${DOCKER_REGISTRY-}jenkinsservice
    container_name: tg-jenkinsservice-service
    build:
      context: .
      dockerfile: JenkinsService\Dockerfile
    environment:
    - RABBIT_MQ=tg-rabbit-mq
    volumes:
    - ../DockerVolumes/JenkinsConfig/Secretic:/app/Secretic
  mainbotservice:
    image: ${DOCKER_REGISTRY-}mainbotservice
    container_name: tg-mainbot-service
    build:
      context: .
      dockerfile: MainBotService\Dockerfile
    environment:
    - RABBIT_MQ=tg-rabbit-mq
    volumes:
    - ../DockerVolumes/MainBot/Secretic:/app/Secretic
  webadminservice:
    image: ${DOCKER_REGISTRY-}webadminservice
    container_name: tg-webadmin-service
    build:
      context: .
      dockerfile: WebAdminService/Dockerfile
    ports:
    - 8888:80
    environment:
    - RABBIT_MQ=tg-rabbit-mq


  vault:
    image: vault
    container_name: tg-secretic
    hostname: tg-secretic
#Running Vault for Development
#$ docker run --cap-add=IPC_LOCK -d --name=dev-vault vault
#This runs a completely in-memory Vault server, which is useful for development but should not be used in production.

#When running in development mode, two additional options can be set via environment variables:

#VAULT_DEV_ROOT_TOKEN_ID: This sets the ID of the initial generated root token to the given value
#VAULT_DEV_LISTEN_ADDRESS: This sets the IP:port of the development server listener (defaults to 0.0.0.0:8200)
#As an example:

#$ docker run --cap-add=IPC_LOCK -e 'VAULT_DEV_ROOT_TOKEN_ID=myroot' -e 'VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:1234' vault